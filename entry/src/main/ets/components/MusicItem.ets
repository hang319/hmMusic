// MusicItem ÁªÑ‰ª∂ - Áã¨Á´ãÊñá‰ª∂Ôºå‰æõÂÖ∂‰ªñÈ°µÈù¢ÂØºÂÖ•‰ΩøÁî®
// ‰ΩøÁî®@PropÊé•Êî∂Áà∂ÁªÑ‰ª∂‰º†ÈÄíÁöÑÊï∞ÊçÆ


@Component
export struct MusicItem {
  @Prop songName: string;  // Êé•Êî∂Ê≠åÊõ≤ÂêçÁß∞
  @Prop songAuthor: string;  // Êé•Êî∂‰ΩúËÄÖÂêçÁß∞
  @Prop isPlaying: boolean;  // Êé•Êî∂Êí≠ÊîæÁä∂ÊÄÅ
  
  // Êú¨Âú∞Áä∂ÊÄÅÔºå‰∏ç‰ºöÂΩ±ÂìçÁà∂ÁªÑ‰ª∂
  @State private isLiked: boolean = false;
  
  // ÊäõÂá∫‰∫ã‰ª∂ (ÈÄöËøáProp‰º†ÈÄíÂõûË∞ÉÂáΩÊï∞)
  @Prop onLikeClick: () => void;

  build() {
    Row() {
      // Èü≥‰πê‰ø°ÊÅØÂå∫Âüü
      Column() {
        Text(this.songName)
          .fontColor('#fff')
          .fontSize(16)
          .maxLines(1)
        
        Text(this.songAuthor)
          .fontColor('#999')
          .fontSize(14)
          .margin({ top: 4 })
      }
      .layoutWeight(1)
      
      // Êí≠ÊîæÁä∂ÊÄÅÂíåÂñúÊ¨¢ÊåâÈíÆ
      Column() {
        if (this.isPlaying) {
          Text('‚ñ∂ Êí≠Êîæ‰∏≠')
            .fontColor('#e85a88')
            .fontSize(12)
            .margin({ bottom: 4 })
        }
        
        Button(this.isLiked ? '‚ù§Ô∏è' : 'ü§ç')
          .onClick(() => {
            this.isLiked = !this.isLiked;
            this.onLikeClick();  // Ëß¶Âèë‰∫ã‰ª∂
          })
          .backgroundColor('#2d2b29')
          .borderRadius(15)
          .width(30)
          .height(30)
      }
    }
    .width('100%')
    .padding(12)
    .backgroundColor('#2d2b29')
    .borderRadius(8)
    .margin({ bottom: 8 })
  }
} 